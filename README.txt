git add .
git commit -m "Описание изменений"
git push


Для создания HTML проекта с использованием Node.js, давайте разобьем задачу на несколько шагов:

Установим Node.js и npm (если они еще не установлены).

Создадим базовую структуру проекта.

Напишем сервер с использованием Express.

Создадим HTML файл.

Запустим сервер и проверим результат.

Шаг 1: Установка Node.js и npm
Если у вас еще не установлен Node.js, его можно скачать с официального сайта nodejs.org.

После установки, чтобы проверить, что всё прошло успешно, откройте терминал и выполните команду:

bash
Копировать
Редактировать
node -v
npm -v
Шаг 2: Создание структуры проекта
Создайте новую папку для вашего проекта:

bash
Копировать
Редактировать
mkdir my-nodejs-project
cd my-nodejs-project
Инициализируйте новый проект Node.js:

bash
Копировать
Редактировать
npm init -y
Это создаст файл package.json, который будет хранить все зависимости вашего проекта.

Шаг 3: Установка Express
Для создания сервера установим пакет Express, который упростит работу с сервером.

bash
Копировать
Редактировать
npm install express

node server.js

--------------

На вашем компьютере:

Откройте терминал или командную строку.

Перейдите в папку проекта:

bash
Копировать
Редактировать
cd путь/к/папке
Инициализируйте git-репозиторий:

bash
Копировать
Редактировать
git init
Свяжите локальный репозиторий с удалённым (на GitHub):

bash
Копировать
Редактировать
git remote add origin https://github.com/ваше_имя/имя_репозитория.git
3. Добавление файлов в репозиторий
Добавьте файлы проекта:

bash
Копировать
Редактировать
git add .
Это добавит все файлы в текущей папке.

Сделайте первый коммит:

bash
Копировать
Редактировать
git commit -m "Первый коммит"
4. Публикация на GitHub
Отправьте изменения на GitHub:

bash
Копировать
Редактировать
git push -u origin master
Это загрузит ваш проект на GitHub в репозиторий.

5. Публикация последующих изменений
Когда вы вносите изменения и хотите их сохранить:

Сначала добавьте изменения:

bash
Копировать
Редактировать
git add .
Затем сделайте коммит:

bash
Копировать
Редактировать
git commit -m "Описание изменений"
Наконец, отправьте изменения на GitHub:

bash
Копировать
Редактировать
git push
6. Загрузка последних версий из репозитория
Чтобы скачать изменения с GitHub (например, если кто-то другой обновил репозиторий):

bash
Копировать
Редактировать
git pull origin master
Итог:
git init — создаёт локальный репозиторий.

git add . — добавляет все файлы для коммита.

git commit -m "Сообщение" — сохраняет изменения.

git push — отправляет изменения на GitHub.

git pull — загружает последние изменения из репозитория.
